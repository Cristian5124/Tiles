#BlueJ class context
comment0.target=Puzzle
comment0.text=\r\n\ La\ clase\ Puzzle\ se\ encarga\ de\ manejar\ el\ estado\ del\ rompecabezas\ y\ las\ operaciones\ que\ se\ pueden\ realizar\ sobre\ \u00E9l.\r\n\ \r\n\ @author\ Angie\ Ramos\ and\ Cristian\ Polo\r\n\ @version\ 1.0\ \ (08\ septiembre\ 2024)\r\n
comment1.params=h\ w
comment1.target=Puzzle(int,\ int)
comment1.text=\r\n\ Constructor\ que\ inicializa\ el\ rompecabezas\ con\ un\ n\u00FAmero\ espec\u00EDfico\ de\ filas\ y\ columnas.\r\n\ \r\n\ @param\ h\ n\u00FAmero\ de\ filas\ del\ rompecabezas\r\n\ @param\ w\ n\u00FAmero\ de\ columnas\ del\ rompecabezas\r\n
comment10.params=
comment10.target=boolean\ isGoal()
comment10.text=\r\n\ Verifica\ si\ la\ disposici\u00F3n\ actual\ del\ rompecabezas\ coincide\ con\ la\ disposici\u00F3n\ final\ deseada.\r\n\ \r\n\ @return\ true\ si\ la\ disposici\u00F3n\ actual\ es\ igual\ a\ la\ final,\ false\ en\ caso\ contrario\r\n
comment11.params=
comment11.target=int[][]\ actualArrangement()
comment11.text=\r\n\ Devuelve\ la\ disposici\u00F3n\ actual\ del\ rompecabezas.\r\n\ Recorre\ la\ matriz\ de\ baldosas\ y\ crea\ una\ nueva\ matriz\ de\ enteros\ que\ representa\ la\ disposici\u00F3n\ actual.\r\n\ Cada\ celda\ de\ la\ matriz\ resultante\ contendr\u00E1\ el\ valor\ de\ la\ baldosa\ (por\ ejemplo,\ un\ n\u00FAmero\ que\ representa\ el\ color\ o\ tipo\ de\ baldosa)\r\n\ o\ 0\ si\ no\ hay\ ninguna\ baldosa\ en\ esa\ posici\u00F3n.\r\n\ \r\n\ @return\ una\ matriz\ de\ enteros\ que\ representa\ la\ disposici\u00F3n\ actual\ del\ rompecabezas\r\n
comment12.params=
comment12.target=void\ finish()
comment12.text=\r\n\ Termina\ el\ simulador\ del\ rompecabezas\ y\ reinicia\ su\ estado.\r\n\ Este\ m\u00E9todo\ vac\u00EDa\ las\ matrices\ de\ baldosas\ y\ pegamento,\r\n\ y\ establece\ las\ variables\ en\ su\ estado\ inicial.\r\n
comment13.params=row\ column
comment13.target=boolean\ isValidPosition(int,\ int)
comment13.text=\r\n\ Verifica\ si\ una\ posici\u00F3n\ es\ v\u00E1lida\ dentro\ de\ los\ l\u00EDmites\ del\ rompecabezas.\r\n\ \r\n\ @param\ row\ fila\ a\ verificar\r\n\ @param\ column\ columna\ a\ verificar\r\n\ @return\ true\ si\ la\ posici\u00F3n\ es\ v\u00E1lida,\ false\ en\ caso\ contrario\r\n
comment14.params=row\ column
comment14.target=Tile\ findTile(int,\ int)
comment14.text=\r\n\ Busca\ una\ baldosa\ en\ la\ lista\ de\ baldosas\ que\ se\ encuentra\ en\ una\ posici\u00F3n\ espec\u00EDfica.\r\n\ Recorre\ la\ lista\ de\ baldosas\ "tiles"\ y\ compara\ la\ fila\ y\ la\ columna\ de\ cada\ baldosa\ con\ las\ coordenadas\ proporcionadas.\ Si\ \r\n\ encuentra\ una\ baldosa\ en\ la\ posici\u00F3n\ especificada,\ la\ devuelve;\ si\ no\ se\ encuentra\ ninguna\ baldosa\ en\ esa\ posici\u00F3n,\ devuelve\ "null".\r\n\ \r\n\ @param\ row\ fila\ de\ la\ posici\u00F3n\ en\ la\ que\ se\ busca\ la\ baldosa\r\n\ @param\ column\ columna\ de\ la\ posici\u00F3n\ en\ la\ que\ se\ busca\ la\ baldosa\r\n\ @return\ la\ baldosa\ encontrada\ en\ la\ posici\u00F3n\ especificada\ o\ null\ si\ no\ hay\ ninguna\ baldosa\r\n
comment15.params=
comment15.target=void\ drawBoard()
comment16.params=
comment16.target=void\ makeVisible()
comment16.text=\r\n\ Dibuja\ las\ baldosas\ sobre\ el\ tablero,\ superpuestas\ a\ las\ celdas\ vac\u00EDas.\r\n
comment17.params=
comment17.target=void\ makeInvisible()
comment17.text=\r\n\ Hace\ invisibles\ todas\ las\ baldosas\ en\ el\ rompecabezas.\r\n
comment2.params=ending
comment2.target=Puzzle(int[][])
comment2.text=\r\n\ Constructor\ sobrecargado\ que\ crea\ un\ Puzzle\ a\ partir\ de\ una\ matriz\ de\ posiciones.\r\n\ \r\n\ @param\ ending\ una\ matriz\ de\ enteros\ que\ representa\ las\ posiciones\ de\ las\ baldosas.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Se\ asume\ que\ un\ valor\ de\ 0\ significa\ que\ no\ hay\ baldosa\ en\ esa\ posici\u00F3n.\r\n
comment3.params=starting\ ending
comment3.target=Puzzle(int[][],\ int[][])
comment3.text=\r\n\ Constructor\ sobrecargado\ que\ crea\ un\ Puzzle\ a\ partir\ de\ matrices\ de\ posiciones\ inicial\ y\ final.\r\n\ \r\n\ @param\ starting\ una\ matriz\ de\ enteros\ que\ representa\ las\ posiciones\ iniciales\ de\ las\ baldosas.\r\n\ @param\ ending\ una\ matriz\ de\ enteros\ que\ representa\ las\ posiciones\ finales\ de\ las\ baldosas.\r\n
comment4.params=row\ column\ color
comment4.target=void\ addTile(int,\ int,\ java.lang.String)
comment4.text=\r\n\ A\u00F1ade\ una\ baldosa\ en\ una\ posici\u00F3n\ espec\u00EDfica\ dentro\ del\ rompecabezas.\r\n\ \r\n\ @param\ row\ fila\ en\ la\ que\ se\ a\u00F1adir\u00E1\ la\ baldosa\r\n\ @param\ column\ columna\ en\ la\ que\ se\ a\u00F1adir\u00E1\ la\ baldosa\r\n\ @param\ color\ color\ de\ la\ baldosa\r\n
comment5.params=row\ column
comment5.target=void\ deleteTile(int,\ int)
comment5.text=\r\n\ Elimina\ una\ baldosa\ de\ una\ posici\u00F3n\ espec\u00EDfica\ dentro\ del\ rompecabezas.\r\n\ \r\n\ @param\ row\ fila\ de\ la\ baldosa\ a\ eliminar\r\n\ @param\ column\ columna\ de\ la\ baldosa\ a\ eliminar\r\n
comment6.params=from\ to
comment6.target=void\ relocateTile(int[],\ int[])
comment6.text=\r\n\ Mueve\ una\ baldosa\ de\ una\ posici\u00F3n\ a\ otra.\r\n\ \r\n\ @param\ from\ un\ arreglo\ que\ contiene\ la\ fila\ y\ columna\ de\ la\ posici\u00F3n\ actual\ de\ la\ baldosa\r\n\ @param\ to\ un\ arreglo\ que\ contiene\ la\ nueva\ fila\ y\ columna\ a\ la\ que\ se\ mover\u00E1\ la\ baldosa\r\n
comment7.params=row\ column
comment7.target=void\ addGlue(int,\ int)
comment7.text=\r\n\ Agrega\ pegante\ en\ la\ posici\u00F3n\ especificada\ del\ rompecabezas.\r\n\ \r\n\ @param\ row\ fila\ a\ la\ que\ se\ agrega\ pegante\r\n\ @param\ column\ columna\ a\ la\ que\ se\ agrega\ pegante\r\n
comment8.params=row\ column
comment8.target=void\ deleteGlue(int,\ int)
comment8.text=\r\n\ Elimina\ pegante\ en\ la\ posici\u00F3n\ especificada\ del\ rompecabezas.\r\n\ \r\n\ @param\ row\ fila\ a\ la\ que\ se\ le\ elimina\ el\ pegante\r\n\ @param\ column\ columna\ a\ la\ que\ se\ le\ elimina\ el\ pegante\r\n
comment9.params=direction
comment9.target=void\ tilt(char)
comment9.text=\r\n\ Inclina\ el\ rompecabezas\ en\ la\ direcci\u00F3n\ especificada.\r\n\ \r\n\ @param\ direction\ direcci\u00F3n\ en\ la\ que\ se\ inclinar\u00E1\ el\ rompecabezas\ (ej.\ 'N',\ 'S',\ 'E',\ 'O')\r\n
numComments=18
